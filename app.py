import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Activer le style BD
plt.xkcd()

# ---------------------
# Donn√©es nettoy√©es
# ---------------------
data = {
    "distance_km": [19.1, 11.5, 50.0, 49.0, 108.8, 8.0, 102.5, 3.4, 97.3, 109.9,
                    81.4, 4.4, 65.9, 50.8, 19.9, 107.9, 85.5, 48.5, 130.9, 102.7, 34.6],
    "co2_kg":     [3.65, 2.3, 9.6, 9.41, 20.9, 1.54, 19.8, 0.58, 18.6, 21.1,
                   15.6, 0.77, 12.7, 9.79, 3.84, 20.7, 16.5, 9.41, 25.2, 19.8, 6.72]
}

df = pd.DataFrame(data)
df["co2_per_km"] = df["co2_kg"] / df["distance_km"]

# ---------------------
# Titre principal
# ---------------------
st.title("üåç Analyse des donn√©es sur mon voyage √† l'√Æle Maurice en 2023")

# ---------------------
# Section 1 : Donn√©es brutes
# ---------------------
st.subheader("üìã Donn√©es enregistr√©es")
st.dataframe(df)

# ---------------------
# Section 2 : Statistiques
# ---------------------
st.subheader("üìå R√©sum√© statistique")

# Slider pour choisir le prix du carbone
price_per_kg = st.slider("üí∂ Choisissez le prix du CO‚ÇÇ (‚Ç¨/kg)", min_value=0.01, max_value=0.50, value=0.10, step=0.01)

# Calculs
total_distance = df["distance_km"].sum()
total_co2 = df["co2_kg"].sum()
mean_co2_per_km = total_co2 / total_distance
co2_cost_euro = total_co2 * price_per_kg
max_co2 = df["co2_kg"].max()
max_distance = df["distance_km"].max()

# Affichage
st.markdown(f"""
- üõ£Ô∏è **Distance totale parcourue** : `{total_distance:.1f}` km  
- üå´Ô∏è **√âmissions totales de CO‚ÇÇ** : `{total_co2:.2f}` kgCO‚ÇÇe  
- ‚öñÔ∏è **Moyenne CO‚ÇÇ par km** : `{mean_co2_per_km:.2f}` kgCO‚ÇÇe/km  
- üí∂ **Co√ªt carbone estim√©** : `{co2_cost_euro:.2f}` ‚Ç¨ (√† {price_per_kg:.2f} ‚Ç¨/kg)  
- üìà **Trajet le plus long** : `{max_distance}` km  
- üî• **Trajet le plus polluant** : `{max_co2}` kgCO‚ÇÇe
""")

# ---------------------
# Section 3 : Graphiques
# ---------------------
st.subheader("üìà Visualisations des donn√©es")

# 1. Courbe distance vs CO2
fig1, ax1 = plt.subplots()
ax1.plot(df["distance_km"], df["co2_kg"], marker='o', linestyle='-', linewidth=2)
ax1.set_xlabel("Distance (km)")
ax1.set_ylabel("CO‚ÇÇ (kg)")
ax1.set_title("√âvolution des √©missions selon la distance")
st.pyplot(fig1)

# 2. Histogramme des √©missions
fig2, ax2 = plt.subplots()
ax2.hist(df["co2_kg"], bins=10)
ax2.set_xlabel("CO‚ÇÇ (kg)")
ax2.set_ylabel("Nombre de trajets")
ax2.set_title("Distribution des √©missions de CO‚ÇÇ")
st.pyplot(fig2)

# 3. CO‚ÇÇ par km
fig3, ax3 = plt.subplots()
ax3.plot(df["co2_per_km"], marker='o')
ax3.set_ylabel("kgCO‚ÇÇe/km")
ax3.set_xlabel("Trajet #")
ax3.set_title("√âmissions de CO‚ÇÇ par kilom√®tre")
st.pyplot(fig3)

# 4. Barres comparatives
fig4, ax4 = plt.subplots()
ax4.bar(range(len(df)), df["distance_km"], label="Distance (km)")
ax4.bar(range(len(df)), df["co2_kg"], label="CO‚ÇÇ (kg)", alpha=0.7)
ax4.set_title("Comparaison Distance vs CO‚ÇÇ")
ax4.legend()
st.pyplot(fig4)

# ---------------------
# Footer
# ---------------------
st.markdown("---")
st.caption("Donn√©es analys√©es avec amour et un soup√ßon de CO‚ÇÇ üå¥ ‚Äì powered by Streamlit & xkcd style.")